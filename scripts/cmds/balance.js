module.exports = {
	config: {
		name: "balance",
		aliases: ["bal"],
		version: "1.3",
		author: "NTKhang + Modified by You",
		countDown: 5,
		role: 0,
		description: {
			vi: "xem s·ªë ti·ªÅn hi·ªán c√≥ c·ªßa b·∫°n ho·∫∑c ng∆∞·ªùi ƒë∆∞·ª£c tag",
			en: "view your money or the money of the tagged person"
		},
		category: "economy",
		guide: {
			vi: "   {pn}: xem s·ªë ti·ªÅn c·ªßa b·∫°n\n   {pn} <@tag>: xem s·ªë ti·ªÅn c·ªßa ng∆∞·ªùi ƒë∆∞·ª£c tag",
			en: "   {pn}: view your money\n   {pn} <@tag>: view the money of the tagged person"
		}
	},

	langs: {
		en: {
			self: "üí∏ ùêòùê®ùêÆùê´ ùêúùêÆùê´ùê´ùêûùêßùê≠ ùêõùêöùê•ùêöùêßùêúùêû ùê¢ùê¨ : %1",
			other: "üí∏ ùêÅùêöùê•ùêöùêßùêúùêû ùê®ùêü %1 ùê¢ùê¨ %2"
		},
		vi: {
			self: "üí∏ ùêíùê®ÃÇÃÅ ùêùùêÆ ùêúùêÆÃâùêö ùêõùêöÃ£ùêß ùê•ùêöÃÄ %1",
			other: "üí∏ %1 ƒëang c√≥ %2"
		}
	},

	onStart: async function ({ message, usersData, event, getLang }) {
		// Formatter
		function formatMoney(amount) {
			const units = [
				{ power: 303, suffix: 'C', emoji: 'üèõÔ∏è' },
				{ power: 63, suffix: 'V', emoji: 'üöÄ' },
				{ power: 60, suffix: 'NvD', emoji: 'üåå' },
				{ power: 57, suffix: 'OcD', emoji: 'üåÄ' },
				{ power: 54, suffix: 'SeD', emoji: '‚ú®' },
				{ power: 51, suffix: 'SxD', emoji: 'ü™ê' },
				{ power: 48, suffix: 'QiD', emoji: '‚ö°' },
				{ power: 45, suffix: 'QTD', emoji: 'üéá' },
				{ power: 42, suffix: 'TDc', emoji: 'üîÆ' },
				{ power: 39, suffix: 'DDc', emoji: 'üßø' },
				{ power: 36, suffix: 'UDc', emoji: 'üí´' },
				{ power: 33, suffix: 'Dc', emoji: 'üåü' },
				{ power: 30, suffix: 'Nn', emoji: 'üî•' },
				{ power: 27, suffix: 'Oc', emoji: '‚öúÔ∏è' },
				{ power: 24, suffix: 'Sp', emoji: 'üß†' },
				{ power: 21, suffix: 'Sx', emoji: 'üí•' },
				{ power: 18, suffix: 'Qt', emoji: 'üëë' },
				{ power: 15, suffix: 'Qd', emoji: 'üíé' },
				{ power: 12, suffix: 'T', emoji: 'üè¶' },
				{ power: 9, suffix: 'B', emoji: 'üíµ' },
				{ power: 6, suffix: 'M', emoji: 'üî•' },
				{ power: 3, suffix: 'K', emoji: 'üí∞' }
			];
			for (const unit of units) {
				if (amount >= 10 ** unit.power) {
					const val = (amount / 10 ** unit.power).toFixed(2).replace(/\.00$/, '');
					return `${unit.emoji} ${val}${unit.suffix}`;
				}
			}
			return `üßæ ${amount}`;
		}

		if (Object.keys(event.mentions).length > 0) {
			const uids = Object.keys(event.mentions);
			let msg = "";
			for (const uid of uids) {
				const money = await usersData.get(uid, "money");
				const formatted = formatMoney(money);
				const name = event.mentions[uid].replace("@", "");
				msg += getLang("other", name, formatted) + "\n";
			}
			return message.reply(msg.trim());
		}

		const data = await usersData.get(event.senderID);
		const formatted = formatMoney(data.money);
		return message.reply(getLang("self", formatted));
	}
};
